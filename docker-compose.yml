version: "3"
services:
  chronos:
    image: chronos:latest
    restart: always
  redis:
    image: redis:latest
    restart: always
    volumes:
      - redis-data/:/data
    ports:
      - 6379:6379
  prisma:
    image: prismagraphql/prisma:1.29
    restart: always
    ports:
      - "4466:4466"
    environment:
      PRISMA_CONFIG: |
        port: 4466
        # uncomment the next line and provide the env var PRISMA_MANAGEMENT_API_SECRET=my-secret to activate cluster security
        # managementApiSecret: my-secret
        databases:
          default:
            connector: mysql
            host: mysql
            user: root
            password: prisma
            rawAccess: true
            port: 3306
            migrations: true
  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: prisma
    volumes:
      - mysql:/var/lib/mysql
  frontend:
    image: ui:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./server-conf/nginx:/etc/nginx/conf.d
      - ./server-conf/certbot/conf:/etc/letsencrypt
      - ./server-conf/certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    # command: 'nginx -g "daemon off;"'
  backend:
    image: be:latest
    ports:
      - "4444:4444"
    volumes:
      - ./server-conf/certbot/conf:/usr/src/backend/be/letsencrypt
    command: "yarn workspace be run prod"
  certbot:
    image: certbot/certbot
    volumes:
      - ./server-conf/certbot/conf:/etc/letsencrypt
      - ./server-conf/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
volumes:
  mysql:
  redis-data:
